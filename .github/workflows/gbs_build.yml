name: Build and unit test/ Tizen/GBS

# ${{ github.event.pull_request.commits }} : # commits in this PR
# - changed_file_list in GITHUB_ENV: the list of files updated in this pull-request.

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Tizen GBS build on Ubuntu
    strategy:
      matrix:
        include:
          - gbs_build_arch: "x86_64"

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: -${{ github.event.pull_request.commits }}
    - name: Check if rebuild required
      uses: ./.github/actions/check-rebuild
      with:
        mode: gbs
    - uses: actions/setup-python@v1

    - name: prepare GBS
      if: env.rebuild == '1'
      run: |
        echo "deb [trusted=yes] http://download.tizen.org/tools/latest-release/Ubuntu_22.04/ /" | sudo tee /etc/apt/sources.list.d/tizen.list
        sudo apt-get update && sudo apt-get install -y gbs
        cp .github/workflows/tizen.gbs.conf ~/.gbs.conf

    - name: get date
      id: get-date
      run: |
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: restore gbs cache from main branch
      if: env.rebuild == '1'
      uses: actions/cache/restore@v4
      with:
        path: ~/GBS-ROOT/local/cache
        key: gbs-cache-${{ matrix.gbs_build_arch }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          gbs-cache-${{ matrix.gbs_build_arch }}-

    - name: run GBS
      if: env.rebuild == '1'
      run: |
        gbs build --skip-srcrpm --define "_skip_debug_rpm 1" -A ${{ matrix.gbs_build_arch }}
        if [[ "${{ matrix.gbs_build_arch }}" == "aarch64" ]]; then
          echo "rebuild=0" >> "$GITHUB_ENV"
        fi

    - name: SHOW AWS CLI VERSION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws --version


    - name: Sync Bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY_SECRET }}
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws configure list
        aws s3 cp \
          --region ap-northeast-2 \
          ~/GBS-ROOT/local/repos/tizen/${{ matrix.gbs_build_arch }}/RPMS/nnstreamer-2.4.1-0.x86_64.rpm s3://nnstreamer-release/nnstreamer-2.4.1-0.x86_64.rpm
